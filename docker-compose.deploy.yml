services:

  web:
    build:
      context: ./docker/web-app
    container_name: pong-web-app
    restart: always
    command: /bin/bash "/docker/web-app/entrypoint.sh"
    env_file: ./docker/web-app/.env_web_app
    volumes:
      - .:/app

  db:
    image: postgres:latest
    container_name: db-app
    env_file: ./docker/web-app/.env_db
    volumes:
      - postgres_data:/var/lib/postgresql/data/

  redis:
    image: redis:latest
    container_name: redis-app
  
  proxy:
    build:
      context: ./docker/proxy
    container_name: proxy-nginx
    restart: always
    depends_on:
      - web
    ports:
      - "80:80"
      - "443:443"
    env_file: ./docker/proxy/.env_proxy
    volumes:
      - certbot-web:/vol/www
      - proxy-dhparams:/vol/proxy
      - certbot-certs:/etc/letsencrypt
    # environment:
    #   - DOMAIN=${DOMAIN}

  certbot:
    build:
      context: ./docker/certbot
    container_name: certbot
    command: echo "Skip certbot.."
    env_file: ./docker/proxy/.env_proxy
    # environment:
    #   - DOMAIN=${DOMAIN}
    #   - EMAIL=${EMAIL}
    volumes:
      - certbot-web:/vol/www
      - certbot-certs:/etc/letsencrypt/
    depends_on:
      - proxy

volumes:
  postgres_data:
  certbot-web:
  proxy-dhparams:
  certbot-certs: